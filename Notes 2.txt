Res folder
Drawable folder - we can place picture in this.
Layout folder - xml file which defines the layout. Has design/test mode.
mipmap folder - contains different quality images. Depending on screen density, the image is loaded. 
dpi - dots per inch
values folder - xml files with values of color etc which can be used.

Gradle Scripts
build.gradle(Module: app) - compileSdkVersion(highest version of compiler used)

To change the launcher icon
1. Go to top app folder
2. Right click and new and Image asset
3. select appropriate image
4. Go to app folder and manifests
5. Go to AndroidManifest.xml
6. Under application, go to android:icon="@mipmap/changed_icon_name" and insert changed icon name.  

EditText
android:layout_width="match_parent"
android:inputType="text"
android:hint="user name"
android:gravity="center"

Toast
It is a notification message tha pop up, display a certain amount of time, and automatically fades in and out, most people just use it for debugging purpose.

View object
	Button
	CheckBox
	TextView

Class R
	It has a static member => class id
		class id has a static member => clickButton
R.id.clickButton

------
Adding a custom layout

View is the super class for Button

right click layout folder 
New -> new XML layout
Give filename and layout relative or linear

Add an ImageView
android:src="@drawable/joseph"

LayoutInflator obj => to instantiate xml file -> view objects 

In custom.xml, in Relative Layout tag heading, add android:id="@+id/customId"  

------
Multiple activities in Android
Intent is messaging object to start anything(service, activities)

Go to java -> application multidemo right click
New -> Activity -> Empty Actvity
give name 

Inside manifest folder AndroidManifest.xml
All the activity will be available inside this file under activity tag
Any activity name starts with .Activity Name  

-----
Using intent to pass data from one activity to another
Put data1 & data2 into intent object before starting the second activity
intent.putExtra("first", data1);
intent.putExtra("second", data2);


Retrieve the data from Intent object
String s = intent.getStringExtra("first");
String s1 = intent.getStringExtra("second");
getDoubleExtra - if type is Double
getStringExtra - if type is String

Setting textView  
textView.setText(s+":"+s1);
-----
Create Listview in Android
Adapter
Array Adapter (String)
Base Adapter (Customized)
Cursor Adapter (database)

Inside containers -> Listview

ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(
          this, // context
          android.R.layout.simple_list_item_1,    // data is inserted into textview
          fruits  // input resource
);

set adapter to listView
listView.setAdapter(arrayAdapter);

create myview
new xml layout -> myview, root tag as TextView

add as custom view layout
R.layout.myview

Goto Project view
External libraries
Android
res
layout
simple_list_item_1
copy the last line of min height for getting the same height
goto myview and paste as last line

Add android:gravity="center_vertical" to center vertical the text

-----
ListView using ArrayAdapter with Event Handling
1. Register with setOnItemClickListener
2. Override onItemClick
3. Convert the view object to get content
4. Toast with/without position

-----
SQLiteAddDisplay
DataBaseHandler extends SQLiteOpenHelper contains 2 abstract method 
onCreate(code to create the table when running the app, only exectutes if table not available), 
onUpgrade(code to upgrade db by add column/ version, generally drop table and recreate the table)

db.insert("Employee", null, values);
Table, nullColumnHack, ContentValues object
if nullColumnHack=null, no empty row will be inserted

for documentation
/***and press enter

rawQuery() - to execute the sql query
we can use sql here

Cursor will be pointing above the first row
-----
SERVICE
Used to perform long operations in background
Does not have UI

2 forms
1. started - called by startService()
Once started a service can run indefinitely, even if the component that started it is destroyed.

2. Bound
A service is bound when an application component binds to it by calling bindService().

Life cycle methods
onCreate()
onStartCommand()
onBind()
onDestroy()

For createing the Service 
Service - short running service (Main activity and service in same thread)
Service(intentService) - long running service (Thread handler used)

Create an intent for starting the service
startService(intent);

similarly
stopService(intent)

To monitor log here
select "info" and tagname "mylog" 

Once job is done we can call stopSelf();
-----
Resource crunch
when so many apps are running. Low memory

the android will close the service app only if critical even after closing other apps.

Once it is killed will it be restarted.

return super.onStartCommand(intent, flags, startId)
START_STICKY (default): START_FLAG_RETRY is the flag in onStartCommand()
create a fresh copy of service when sufficient memory available

START_NOT_STICKY : START_FLAG_RETRY is the flag in onStartCommand()
not to bother to restart the service, even when it has sufficient memory

START_REDELIVER_INTENT : START_FLAG_REDELIVERY is the flag in onStartCommand()
to restart the service after the crash and also redeliver the intents that were present at the time of crash.

-----
Google introduced the Tool Bar for Android with Android 5.0 Lollipop
It's a generalisation of the Action Bar that isn't bound to an Activity's window decor, can be placed anywhere in the user interface, and can even be designated as the Action Bar replacement for an Activity.

in res \ values\ styles
in 
parent = "Theme.AppCompact.Light.DarkActionBar"
change to
parent = "Theme.AppCompact.NoActionBar"

Remove padding values to remove spaces

if error core-ui
Add implementation 'androidx.legacy:legacy-support-core-ui:1.0.0-alpha1' in build.gradle dependency

Keep Toolbar only after setContentView
In Drawable folder, create new Image Assets

----
Switch On Off Bluetooth
Bluetooth Adapter helps to communicate with Bluetooth
we check if it is enabled or not.
Then we enable it with intent object.

Use startActivityForResult() if we want to oerride its relevent callback method

Here we are using the Bluetooth in On button we need to set some permission in AndroidManifest.xml
<uses-permission android:name="android.permission.BLUETOOTH"/>

To swith off bluetooth we need some admin permission, necessary to disable it.
<uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>

note: check the output in a physical device not in emulator.
-----
List Out Paired Devices/ Bonded devices

Set<BluetoothDevice> set = bluetoothAdapter.getBondedDevices()
-----
NOTE - WIFI CODE SEEMS TO BE HAVING SOME ISSUE

WiFi Switch ON OFF

Switch element
<Switch
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/myswitch"
        android:text="WiFi Settings"
        android:textOn="ON"
        android:textOff="OFF"
        android:showText="true"
        />
showText used to show the textOn, textOff.

Switch uses setOnCheckedChangeListener
WifiManager is important here

isChecked is true when button becomes OFF to ON position

First it checks if isChecked is true and WiFi is not ON, then it turns WiFi ON
Else it checks if isChecked is false and WiFi is ON, then it turns WiFi OFF

To use WiFi we need to give some permission in AndroidManifest.xml file outside application tag
<uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
<uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>
-----
Android - Scan WiFi Connections
Whenever there is a change BroadCastReceiver is called and onReceive is invoked 	
-----
Create Fragments in Android

MainActivity
	1. ListFrag.java + xml - ListView
	2. TextFrag.java + xml - TextView

LinearLayout - one layout adjacent to another layout

create ListFrag.java
	1. create a class which extends Fragment
	2. Override onCreateView

	
we can inflate xml file

inflater.inflate(which xml, which parent, whether attached to parent or not)

getActivity() - Returns the Activity this fragment is currently associated with.

Three properties in textView in text_frag.xml
android:layout_width="match_parent"
android:layout_height="match_parent"
android:gravity="center"

Finding the fragment can be done with FragmentManager
To manage all the fragment in a particular activity

To add fragments => Java / xml

using xml go to activity_main.xml and add fragments using <fragment>
-----
Multi tabs in Android

TabLayout provided by Google material design

in style.xml change to Theme.AppCompat.NoActionBar

Add a toolbar
Replaced below in build.gradle as core-ui line was not working
implementation 'androidx.legacy:legacy-support-core-ui:1.0.0-alpha1'

Teachers dependency
com.android.support:appcompat-v7:24.2.1
com.android.support:design:24.2.1

ViewPager for sliding options
in xml we have
Toolbar, TabLayout, ViewPager

3 tabs - for each tab we are going to create one fragment

create a class which return relevent fragment for every slide
FragmentStatePagerAdapter - When move from one tab to another, old fragment is removed from memory. 

getItem invoked by the app, whenever we move from one tab to another
-----
Android app to Track your location using Google Map API

google maps activity project

It open google_maps_api.xml file, where we can give api key
In my case it is in AndroidManifest.xml

<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>

As app started it calls the onCreate method, then getMapAsync(this) it calls onMapReady method

moveCamera moves the screen to that location

onMapReady method is needed to be override it is in the interface OnMapReadyCallback.

LatLng sydney = newLatLng(-34, 151)
// for zooming
mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(sydney, 10.2f))

For our own location
LocationManager which manages the location

provider - network/gps
minTime - minimum time to update 
minDistance - minimum distance to update
LocationListener

latitude and longitude is very important to get address using the concept called geocoder.

onLocationChanged gets triggered whenever there is a location change.

geocoder.getFromLocation(latitude, longitude, 1) returns a list with 1 address

From address got we can use getLocality(), getCountryName() to get locailty and country name
-----
Application Specific Folders to Store Files

Using Application-Specific Folders to Store Files

Creating Private Application Files

Private Application Files stored in data/data/com.example.bright.myapplication/files

To store, Android offers the
	1. openFileInput and
	2. openFileOutput methods to simplify reading and writing streams from and to files stored in the application's sandbox.

To keep some file in Private Application Files we can use openFileOutput
To read such files we can use openFileInput 

openFileOutput returns an object of type FileOutputStream.

MODE_APPEND - keeps the old data
MODE_PRIVATE - removes the old data

getFilesDir() - returns File object, we can use it to get the location of the myFile.txt
/data/data/com.example.applicationspecificfoldersstorefiles/files 

